/*--------------------------------------------------------------------------------*/

/* My stack structure to stock the Trame it receives */

typedef struct ElementTrameStructure ElementTrame;
struct ElementTrameStructure{
  int Byte;
  ElementTrame* suivant = NULL;
};

/* Might change them to local var */

ElementTrame * TopTrame;       //Points to the top of the stack
ElementTrame * TopTrameProcessed; //Points to the top of the processed stack


/*Function to create the structure which will stock the Trame*/

ElementTrame* init_tram(){
  ElementTrame* elementtrame = malloc(sizeof(*elementtrame));
  if(elementtrame == NULL){
    exit(EXIT_FAILURE);
  }
  elementtrame->suivant = NULL;
  elementtrame->Byte = '%';
  return elementtrame;
}

/*Function to remove the first element of the Trame list*/

void pop(ElementTrame * toptrame){
  if(toptrame == NULL){
    exit(EXIT_FAILURE);
  }
  ElementTrame * TrameDelete;
  TrameDelete = toptrame;
  toptrame = toptrame->suivant;
  free(TrameDelete);
}

/*Function to add elemenent to Trame list*/

void pileup(ElementTrame * toptrame, int incomingByte){
  ElementTrame * newElementTrame = malloc(sizeof(*newElementTrame ));
  if(newElementTrame == NULL){
    exit(EXIT_FAILURE);
  }
  newElementTrame->Byte = incomingByte;
  newElementTrame->suivant = toptrame;
  toptrame = newElementTrame;
}

/*--------------------------------------------------------------------------------*/
